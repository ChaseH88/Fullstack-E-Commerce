{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.50ac7c30edf8e930a4b5.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\r\nimport Page from \"../components/Page\";\r\n\r\n// Apollo\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport withData from \"../lib/withData\";\r\n\r\n\r\n// This component will be on every single page\r\n// this will store local state\r\nclass MyApp extends App {\r\n\r\n  // Next.js lifecycle method - RUNS before render method\r\n  // grabs all queries on the page and runs them no matter which page you're on\r\n  static async getInitialProps({ Component, ctx }){\r\n    let pageProps = {};\r\n    if(Component.getInitialProps){\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    // this exporese the query to the user\r\n    pageProps.query = ctx.query\r\n    return { pageProps }\r\n  }\r\n\r\n  render(){\r\n    // Destructured \r\n    const { Component, apollo } = this.props;\r\n\r\n    return(\r\n      <Container>\r\n        <ApolloProvider client={apollo}>\r\n          <Page>\r\n            <Component {...pageProps} />\r\n          </Page>\r\n        </ApolloProvider>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withData(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;;;;;;;;;;;;;AAcA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAzBA;AACA;;;;;;;;;;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAZA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}