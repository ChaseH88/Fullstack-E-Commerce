{"version":3,"file":"static/webpack/static\\development\\pages\\items.js.a122ff79e4a8a20b97d0.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\n\r\n// Styled Components\r\nimport Title from \"./styles/Title\";\r\nimport ItemStyles from \"./styles/ItemStyles\";\r\nimport PriceTag from \"./styles/PriceTag\";\r\n\r\n// Utilities\r\nimport formatMoney from \"../lib/formatMoney\";\r\n\r\nclass Item extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render(){\r\n    const { item } = this.props;\r\n    return(\r\n      <ItemStyles>\r\n        <Title>\r\n          <Link href={{\r\n            pathname: \"/item\",\r\n            query: { id: item.id }\r\n          }}>\r\n            <a>{item.title}</a>\r\n          </Link>\r\n        </Title>\r\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\r\n      </ItemStyles>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Item;","export default function(amount) {\r\n  const options = {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n  };\r\n  // if its a whole, dollar amount, leave off the .00\r\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\r\n  const formatter = new Intl.NumberFormat('en-US', options);\r\n  return formatter.format(amount / 100);\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AApBA;AACA;AADA;AAEA;AADA;AACA;AAqBA;;;;;;;;;;;;ACnCA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}